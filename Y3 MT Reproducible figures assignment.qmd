---
title: "Y3 Reproducible figures assignment"
format: html
editor: visual
---

## Question 1: Data visualisation for science communication

#### Question 1a: Bad figure

```{r}
#| echo: false
#| message: false

library(tidyverse)
library(janitor)
library(here)
library(palmerpenguins)
library(ggplot2)

# Loads in the functions for cleaning data / plotting scatterplots from the relevant R files

source(here("functions", "cleaning.R"))

# Load in raw data
write_csv(penguins_raw, here("data", "penguins_raw.csv"))

# Clean raw data using cleaning_data funct
penguins_clean <- cleaning_data(penguins_raw)

# subset data for spp and culmen depth
species_culmen_depth <- penguins_clean %>%
  select(species, culmen_depth_mm)

# Plot violin plot of culmen depth per spp
culmen_depth_violin <- ggplot(data = species_culmen_depth, aes(x = species, y = culmen_depth_mm)) +
  geom_violin(trim = FALSE, alpha = 0.7) +
  geom_jitter(width = 0, alpha = 1, size = 2.5) +
  labs(
    title = "Culmen depth distribution for each penguin species",
    x = "Species",
    y = "Culmen depth (mm)"
  ) + 
  theme_minimal()


culmen_depth_violin

```

#### Question 1b: Write about how your design choices mislead the reader about the underlying datas.

There are 4 main ways that my design choice mislead the reader about the data.

Firstly, the data points aren’t **jittered** which means that it’s difficult to visualise the density of the data points which is an important aspect of a violin plot which shows the density of culmen depth in this case for each species (Wicklin, 2011; Carron 2021).

Furthermore, the data points are **opaque** and linked to this, the **size** of the data points is quite big so this leads to **overplotting** where data points overlap, making it difficult to view individual data points and understand the actual distribution of culmen depth values for each species especially in the Gentoo species (Bock, 2018).

Moreover, the **colour** of the violin plot itself is white which matches the background of the graph, making it difficult to easily estimate the most frequent culmen depth value for each species.

## Question 2: Data pipeline

#### Data preparation steps

Step 1: **Load data** - Load in the relevant packages and palmer penguin data set and save the raw data set.

```{r, echo=TRUE, results='hide'}

#Load relevant libraries

library(tidyverse)
library(janitor)
library(here)
library(palmerpenguins)
library(ggplot2)
library(ragg)
library(svglite)

#This is the folder and R files where I've stored my functions for Q2.

source(here("functions", "cleaning.R"))

source(here("functions", "plotting.R"))

#Visualise raw data and save it 
write_csv(penguins_raw, here("data", "penguins_raw.csv"))
head(penguins_raw)

```

**Step 2**: Appropriately **clean data** - Cleaning function ("Cleaning_data") is used to clean data by removing unnecessary columns as well as clean them (i.e removing empty rows/columns) and shortens the species names. Cleaned data using a function, because it allows for flexibility. We then save the cleaned version of the data. We save a raw version and clean version of the data, so all the changes are tracked and prevent us from changing the data directly with is not reproducible.

```{r, results='hide'}

#create clean data set using function
penguins_clean <- cleaning_data(penguins_raw)

#saves clean data
write_csv(penguins_clean, here("data", "penguins_clean.csv"))

#Provides output detail of what the funct does
print("Removed empty rows, columns, cleaned column names, removed delta and comments columns, shortened species names")

#view clean data
penguins_clean
```

#### Q2: Data analysis - culmen length and flipper length

**Introduction**: I am looking to see if there is a relationship between culmen length and flipper length for each of the 3 species of penguin.

**Null hypothesis**: There is no statistically significant relationship between culmen length and flipper length for each of the three species.

**Alternative hypothesis**: There is a statistically significant relationship between culmen length and flipper length for each of the three species.

**Exploratory figure** of culmen and flipper lengths for each species using function 'plot_scatterplot':

```{r}

source(here("functions","plotting.R"))

#Creates scaterplot using function from file above
flipper_culmen_scatterplot <- plot_scatterplot(penguins_clean, culmen_length_mm, flipper_length_mm,
                 "Culmen length (mm)", "Flipper length (mm)")
   
flipper_culmen_scatterplot      
```

These scatterplots show that the relationship between culmen length and flipper length is roughly linear for all three species, even though there is some noise in the data.

**Save the explanatory figure** as a PNG within the 'figures' subfolder:

```{r, results='hide'}

agg_png("figures/penguin_scatterplot_default.png",
        width = 20,
        height = 20,
        units = "cm",
        res = 300,
        scaling = 1)

print(flipper_culmen_scatterplot)
dev.off()

```

**Statistical methods and printing results figure**: Pearson's correlation coefficient

I chose Pearson's correlation coefficient because I want to see if there's a statistically significant relationship between two continuous variables (flipper length vs culmen length) for each of the 3 species.

To calculate the Pearson coefficient, I first need to subset the data for the variables we're interested in (culmen and flipper lengths) and first test whether the data for each species fits the assumptions of the Pearson Correlation Coefficient.

```{r}
#Subset penguin clean data according to species for the variables we're interested in - flipper/culmen length using function spp_subset_data

source(here("functions","testing.R"))

# Adelie subset data
adelie_subset_data <- spp_subset_data(penguins_clean, "Adelie")

# Chinstrap subset data
chinstrap_subset_data <- spp_subset_data(penguins_clean, "Chinstrap")

# Gentoo subset culmen and flipper data
gentoo_subset_data <- spp_subset_data(penguins_clean, "Gentoo")

```

Above I showed that the data for each species follows the assumption of linearity based on the scatterplots.

The data also fulfills the assumption that the two variables are continuous.

Below I test for the other assumptions of the Pearson correlation test - normality, homoscedasticity, the presence of spurious outliers

```{r}
#| echo: false

par(mfrow=c(1,3))

#Testing assumption of normality for culmen and flipper data 

##For Adelie------------------------------

#Shapiro-wilks test for adelie culmen and flipper data
shapiro.test(adelie_subset_data$culmen_length_mm)
shapiro.test(adelie_subset_data$flipper_length_mm)

#QQ plots for adelie culmen and flipper data
qqnorm(adelie_subset_data$culmen_length_mm, main = "Q-Q Plot of Adelie Culmen data", col = "red")
qqline(adelie_subset_data$culmen_length_mm)

qqnorm(adelie_subset_data$flipper_length_mm, main = "Q-Q Plot of Adelie Flipper data", col = "red")
qqline(adelie_subset_data$flipper_length_mm)


# Makes residual plot for Adelie data to test assumption of homoscedasticity
model <- lm(flipper_length_mm ~ culmen_length_mm, data = adelie_subset_data)

plot(model$residuals ~ model$fitted.values, 
     main = "Residuals vs Fitted for Adelie data", 
     xlab = "Fitted values", 
     ylab = "Residuals",
     col = "red")
abline(h=0)

##For chinstrap---------------------

#Shapiro-wilks test for chinstrap culmen and flipper data
shapiro.test(chinstrap_subset_data$culmen_length_mm)
shapiro.test(chinstrap_subset_data$flipper_length_mm)

#QQ plots for chinstrap culmen and flipper data
qqnorm(chinstrap_subset_data$culmen_length_mm, main = "Q-Q Plot of Chinstrap Culmen data", col = "lightgreen")
qqline(chinstrap_subset_data$culmen_length_mm)

qqnorm(chinstrap_subset_data$flipper_length_mm, main = "Q-Q Plot of Chinstrap Flipper data", col = "lightgreen")
qqline(chinstrap_subset_data$flipper_length_mm)


# Makes residual plot for Chinstrap data to test assumption of homoscedasticity
model <- lm(flipper_length_mm ~ culmen_length_mm, data = chinstrap_subset_data)

plot(model$residuals ~ model$fitted.values, 
     main = "Residuals vs Fitted for Chinstrap", 
     xlab = "Fitted values", 
     ylab = "Residuals",
     col = "lightgreen")
abline(h=0)


#For Gentoo-------------------------

#Shapiro-wilks test for Gentoo culmen and flipper data
shapiro.test(gentoo_subset_data$culmen_length_mm)
shapiro.test(gentoo_subset_data$flipper_length_mm)

#Shapiro-Wilks tests and QQ plot for gentoo culmen and flipper data
qqnorm(gentoo_subset_data$culmen_length_mm, main = "Q-Q Plot of Gentoo Culmen data", col = "lightblue")
qqline(gentoo_subset_data$culmen_length_mm)

qqnorm(gentoo_subset_data$flipper_length_mm, main = "Q-Q Plot of Gentoo Flipper data", col = "lightblue")
qqline(gentoo_subset_data$flipper_length_mm)


# Makes residual plot for Gentoo data to test assumption of homoscedasticity
model <- lm(flipper_length_mm ~ culmen_length_mm, data = gentoo_subset_data)

plot(model$residuals ~ model$fitted.values, 
     main = "Residuals vs Fitted for Gentoo data", 
     xlab = "Fitted values", 
     ylab = "Residuals",
     col = "lightblue")
abline(h=0)


#---------------------

#Boxplot of culmen length data for all species
culmen_boxplot <- ggplot(data = penguins_clean,
      aes(x = species,
          y = culmen_length_mm)) +
      geom_boxplot(aes(color = species),
                   width = 0.3,
                   show.legend = FALSE) +
      labs(title = "Boxplot of culmen length data across species",
           x = "Species",
           y = "Culmen length (mm)") +
  theme_bw()


#Boxplot of flipper length data for all species
flipper_boxplot <- ggplot(data = penguins_clean,
      aes(x = species,
          y = flipper_length_mm)) +
      geom_boxplot(aes(color = species),
                   width = 0.3,
                   show.legend = FALSE) +
      labs(title = "Boxplot of flipper length data across species",
           x = "Species",
           y = "Culmen length (mm)") +
  theme_bw()

culmen_boxplot
flipper_boxplot



```

By testing for the assumptions of the pearson correlation test, the Adelie data fits normality as it has the QQ-plots follow a roughly 45 degree angle along the line. This is supported by the p-value of the Shapiro-Wilks test results for culmen length and flipper length (0.68 and 0.74, respectively). There's also random scattering of the residuals on the residuals vs fitted values graph suggesting homoscedasticity. Although there are two outliers in the flipper data for the Adelie species (172mm, 210mm) as seen in the flipper boxplot I have decided to keep them in because I believe they are part of the natural variation rather than being outliers when looked at in comparison to the rest of the Adelie flipper data.

The Chinstrap data fits normality as its QQ-plots also suggest that the data follows a normal distribution, with some curving at either end of the distribution in the case of the Chinstrap culmen data. This is supported by the p-value of the Shapiro-Wilk test results for culmen and flipper lengths (0.19 and 0.81 respectively). Furthermore the random scattering of residuals on the residuals vs fitted values graph suggests there's homoscedasticity.

The Gentoo data shows homoscedasticity with random scattering of residuals. The flipper length data looks roughly normal, with some slight deviations at the tails as seen in the previous species data. The QQ-plot for Gentoo culmen data for most part lies quite well against the line, except for the top tail, which has a deviation. This may be due to the outlier value (59.6mm) as visualised in the Gentoo culmen length boxplot, however, when looked in light of the rest of the culmen data, I believe this value is natural variation rather than an outlier. This may explain the non-significant result of the Shapiro-Wilks test for Gentoo culmen length data - 0.01. The Shapiro-Wilks test for Gentoo flipper data also suggest that it's not normal, however, the qqplot looks normal and isn't too disimilar from the other QQ-plots produced, and so I suggest that this non-significant result was due to the high sensitivity of the Shapiro-Wilks test to deviations in normality especially in a large sample size such as this data (119 measured individuals).

Performing pearson correlation for each species:

```{r}
# Adelie pearson coefficient
adelie_pearson_coeff <- cor.test(adelie_subset_data$culmen_length_mm, adelie_subset_data$flipper_length_mm, method = "pearson")

# Chinstrap pearson coefficient
chinstrap_pearson_coeff <- cor.test(chinstrap_subset_data$culmen_length_mm, chinstrap_subset_data$flipper_length_mm, method = "pearson")

# Gentoo pearson coefficient
gentoo_pearson_coeff <- cor.test(gentoo_subset_data$culmen_length_mm, gentoo_subset_data$flipper_length_mm, method = "pearson")

# Print the pearson correlation coefficient for each species

adelie_pearson_coeff
chinstrap_pearson_coeff
gentoo_pearson_coeff


```

**Saving the results figure**: Create a text file that saves the output of the statistical tests for all three species.

```{r}
#Title of file
cat("Tests output", file = "tests.txt")

#Adds blank line in text document
cat("\n\n", file = "tests.txt", append = TRUE)

#Writes adelie pearson correlation test to text file
cat("Adelie Pearson correlation test", file = "tests.txt", append = TRUE)
capture.output(adelie_pearson_coeff, file = "tests.txt", append = TRUE)

#blank line
cat("\n\n", file = "tests.txt", append = TRUE)

#Adds chinstrap pearson correlation test to text file
cat("Chinstrap Pearson correlation test", file = "tests.txt", append = TRUE)
capture.output(chinstrap_pearson_coeff, file = "tests.txt", append = TRUE)

#blank line
cat("\n\n", file = "tests.txt", append = TRUE)

#Adds gentoo pearson correlation test to text file
cat("Gentoo Pearson correlation test", file = "tests.txt", append = TRUE)
capture.output(gentoo_pearson_coeff, file = "tests.txt", append = TRUE)
```

##### **Results**

In all three species there is a statistically significant relationship between culmen length and flipper length.

In **Adelie** penguins there’s a correlation coefficient of **0.33**, so there’s a moderately positive correlation between culmen and flipper lengths with a p value of **4.18x10^-5^** which is smaller than the significance value of 0.05, so we can reject the null hypothesis. Thus there’s a **statistically significant** relationship between culmen and flipper lengths for Adelie penguins. This is supported by the confidence interval which is **0.18 – 0.47**, and as it doesn’t include 0 this supports the significance of our correlation coefficient.

In **Chinstrap** penguins there’s a correlation coefficient of **0.47** so a moderate to strong positive correlation between culmen and flipper lengths with a p value of **4.92x10^-5^** which is smaller than the significance value of 0.05, so we can reject the null hypothesis. Thus there’s a **statistically significant** relationship between culmen and flipper lengths for Chinstrap penguins. This is supported by the confidence interval which is **0.26 – 0.64**, and as it doesn’t include 0 this supports the significance of our correlation coefficient.

In **Gentoo** penguins there’s a correlation coefficient of **0.66** so a strong positive correlation between culmen and flipper lengths with a p value of **2.2x10^-16^** which is smaller than the significance value of 0.05, so we can reject the null hypothesis. Thus there’s a **statistically significant** relationship between culmen and flipper lengths for Gentoo penguins. This is supported by the confidence interval which is **0.55 – 0.75**, and as it doesn’t include 0 this supports the significance of our correlation coefficient.

##### **Discussion**

I find that there is a statistically significant relationship between culmen length and flipper length for all three species investigated (Adelie, Chinstrap, Gentoo). This suggests that these two anatomical features are coupled, and that there’s a favourable range of length values that one of these features can take given the length of the other feature. This could potentially be because of adaptations to the environment and for swimming, catching and eating specific prey items – in this scenario there’s potential for convergent evolution towards this state due to similar selection pressures.

Alternatively, these two features could be evolutionary coupled in the last common ancestor of all three species, and this coupling remained advantageous for all three penguin species, because they live in same region and so all three species potentially face the same or similar selection pressures and so the coupling of these two morphological features remained.

To expand of this work, it would be interesting to assess the relationship between culmen length and flipper length at other life stages such as juvenile. The data set only consists of adult individuals and so we can not extrapolate this relationship to chicks and juveniles. There may be less of a relationship between culmen length and flipper length during young life stages because they don’t face the same selection pressures as they don’t actively swim and catch fish, but rather rely on their parents for food.

Furthermore, this study looks at three species in the same region, which could potentially explain why all species have a significant relationship between culmen and flipper lengths if these traits are determined in part by environmental selection pressures. But further work, could be see if this relationship is seen in these three species in other regions, to see if this relationship isn’t specific to the conditions of the region. And, more broadly, work into what the cause of this relationship between flipper and culmen lengths could yield insight into the evolution of the culmen and flippers.

#### **Conclusion**:

Overall, I found that there’s a statistically significant relationship between culmen length and flipper length for three penguin species – Adelie, Chinstrap, Gentoo. This could be due to the same/similar evolutionary selection pressures acting upon these two traits that means that it is advantageous for culmen lengths to take a certain range of values given the length of the flipper due to advantages this gives in regards to swimming and catching/eating prey. However, the cause of this relationship remains unknown from this analysis alone, and more work could look into whether this relationship remains statistically significant during other life stages and in populations from other regions.

## Question 3: Open science

#### Q3a: Upload RProject to GitHub.

My GitHub link: https://github.com/Dinosaur88/Reproducible_research_assignment.git

#### Q3b: Share repo with partner and run their data pipeline

Partner's GitHub link: I paired up with 2 other people. So I had access to two other people's code:

The person whose code I reviewed: https://github.com/giraffe145/PenguinAssignment.git

The person who reviewed my code: https://github.com/biologystudentpenguins/reproducible_figures_assessment.git

#### Q3c: My experience running their code.

**What elements of your partner’s code helped you understand their pipeline?**

One of the features of understandable code is using clear names for variables that are meaningful. This code did this fairly well, although there were bits that could’ve been improved like when creating the exploratory scatterplots they named them as ‘plot1’ and ‘plot2’. This could have a more meaningful name related to what these plots show – flipper / culmen lengths against body mass.

Secondly, the generally clearly structure of the pipeline is good with clear steps like data cleaning, visualisation, statistics. This was helped by the use of comments within the code chunks using ‘#’. These provided descriptions of the different steps whilst running the code. Another helpful feature was the use of invisible() which hides the output of certain code like summary(penguins_raw) which don’t need to be seen in the rendered document, and would disrupt its readability.

Thirdly, when they created functions such as in the cleaning data code chunk, they use comments to specifically say what each line of the function does and in the function R file they also explicitly state what each function that they’ve then piped together in the Rmd file using %\>% does and using functions helps keep the code concise and readable.

Element that helped made their code reproducible were saving their figures in a separate file and creating and using flexible functions and using flexible file pathways rather than explicitly stating the file pathway such as ‘getwd()’ and ‘setwd()’. This makes the code more reproducible and allows other people to repeat the code as well as allow this person to repeat their own code on a different machine/device.

**Did the code run, did I need to fix anything?**

The code ran without any error, but to run it, I did I have to modify the code slightly by installing all the libraries manually rather than using renv::Restore as there was an error when running this, as detailed below.

**What suggestions would you make to improve their code?**

A minor point, to make the code more concise, the person could remove the code that produces some redundant figures, such as in the code chunk that creates the exploratory figures (the scatterplots of flipper length, culmen length for all three species) plots the two figures separately and then in a 1x2 figure panel. The code can be edited to just plot the panel.

Something that didn’t run was the first chunk of the data pipeline, in particular the renv::restore() didn’t work correctly and there was an error installing the ‘lattice’ package. To get around this, I modified the code so as to manually upload the packages using library(). This means that the code becomes less reproducible because library() uploads the most up to date version of a package, whilst renv::restore() would upload the exact version of a package used by the original author, allowing the code to be re-run in the future with less chances of errors if packages change.

Another minor suggestion is that the statistics code chunk looks a bit cluttered and some of the comments such as if the data violates the assumptions or not should be put as normal text outside the code chunk because otherwise it breaks the flow of the code chunk and makes it harder to read. More generally, I personally think using more indentation more would help the readability of the code from a visual standpoint, but again a minor point.

**If you needed to change partner’s figure using their code, do you think it would be easy or difficult?**

If I needed to alter my partner’s figure with their code, I feel like it would be relatively easy because of the use of flexible functions such as the plot_scatter and plot_ancova_results functions in Plotting.R, however the latter function is only useful if you use an ANCOVA for your variables of interest. Moreover, the clear structure of the pipeline and the use of ‘#’ comments inform me what occurs at every stage makes it easy to change the code for a figure.

#### Q3d: Reflection on my own code

They suggested the following improvements:

1)  Libraries should be uploaded automatically when running the code
2)  Figures could have been saved as an svg
3)  Make the plot_scatterplot function more flexible
4)  Change code structure in some chunks (testing assumptions of Pearson Correlation code chunk) and add more comments

I agree with the 1). By uploading libraries using the renv() function rather than doing it manually this allows other users to use the same versions of the packages that I used and allows for reproducibility. Although I had a renv file with my packages, I should have written renv::restore() in my code.

I also agree with 2). As svg files are generally more reproducible and can easily be used for different purposes e.g scientific posters, presentations as they’re resolution independent.

I agree with 3) where my partner suggests that I make the function more flexible to plot different categorical variables on the X axis. As this allows people who are using my code and data to look at other categorical variables of interest to them

In terms of 4), I partially agree. I agree that I could add more comments to more explicitely state what each step of my code is doing, in particular in the functions files in the functions folder to tell the other person what each line in my functions do. I don’t necessarily agree with the comment about breaking down my code chunk on testing the assumptions of the pearson correlation, as although that code chunk is long, I wanted the plots and text output to be all together rather than split in the rendered document.

**What did I learn about writing code for other people?**

I learnt the need to keep in mind that other people will view your code for the first time and so the importance of keeping code and files and folders organised with a clear structure which ensures that the code is readable and easily understood by other people. To create code for other people, it’s important to document your steps and provide a good level of information regarding your code. This is done by ensuring that variables have meaningful rather than ambiguous names and that there’s sufficient level of detail in terms of comments that provides the reader with information of what the lines of code do.

As well as providing a certain level of description that makes your code useful to others, the code itself should be kept flexible so others can run it on their own devices by using features such as flexible functions and flexible file pathways, this also allows people to adapt your code for their own purposes.

## Bibliography

Bock, T. (2018, September 21). What is Overplotting? Displayr. https://www.displayr.com/what-is-overplotting/

Carron, J. (2021, December 13). Violin plots 101: Visualizing distribution and probability density \| mode. Mode.com. https://mode.com/blog/violin-plot-examples

Wicklin, R. (2011, July 6). To jitter or not to jitter: That is the question. The DO Loop. https://blogs.sas.com/content/iml/2011/07/06/to-jitter-or-not-to-jitter-that-is-the-question.html
